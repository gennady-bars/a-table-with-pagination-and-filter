{"version":3,"sources":["components/TableRow.js","components/TableSort.js","components/TableHeader.js","components/TablePagination.js","makeRandomData.js","components/Table.js","components/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["TableRow","date","name","quantity","distance","TableSort","props","Fragment","className","onChange","e","onColumnChange","target","value","onConditionChange","onInputChange","type","placeholder","inputDisabled","disabled","TableHeader","tableHeader","map","column","style","scope","key","onClick","sortTable","toUpperCase","TablePagination","pages","Array","pagesTotal","keys","from","Math","max","currentPage","to","min","length","aria-label","onPreviousPageClickHandler","href","page","event","onPageClickHandler","slice","onNextPageClickHandler","range","len","arr","i","push","newPerson","floor","random","ceil","namor","generate","words","numbers","saltLength","subset","makeData","id","Table","state","isFiltered","devidedIntoPages","step","filterValues","condition","input","tableContents","contents","sort","a","b","setState","tableFilterHandler","preventDefault","this","filter","row","keepIt","regEx","RegExp","toLowerCase","test","number","Number","isNaN","filterTable","tableFilter","rowProps","Component","ErrorBoundry","hasError","children","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ggBAaeA,EAXE,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACrC,OACQ,4BACE,4BAAKH,GACL,4BAAKC,GACL,4BAAKC,GACL,4BAAKC,KC4BJC,EAlCG,SAACC,GACf,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,yBACb,4BAAQC,SAAU,SAACC,GAAD,OAAOJ,EAAMK,eAAeD,EAAEE,OAAOC,QAASL,UAAU,iBACxE,4BAAQK,MAAM,IAAd,kGACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,aAEF,4BAAQJ,SAAU,SAACC,GAAD,OAAOJ,EAAMQ,kBAAkBJ,EAAEE,OAAOC,QAAQL,UAAU,iBAC1E,4BAAQK,MAAM,IAAd,kGACA,4BAAQA,MAAM,UAAd,kCACA,4BAAQA,MAAM,YAAd,oDACA,4BAAQA,MAAM,QAAd,wCACA,4BAAQA,MAAM,QAAd,0CAGJ,yBAAKL,UAAU,oBAEb,2BACEC,SAAU,SAACC,GAAD,OAAOJ,EAAMS,cAAcL,EAAEE,OAAOC,QAC9CG,KAAK,OACLR,UAAU,eACVS,YAAaX,EAAMY,cAAe,8MAA2C,+JAC7EC,SAAUb,EAAMY,iBAGpB,gTCROE,EApBK,SAAAd,GAChB,OACE,4BAEEA,EAAMe,YAAYC,KAAI,SAAAC,GACtB,OACE,wBACEC,MAAO,CAAC,OAAU,WAClBC,MAAM,MACNC,IAAKH,EACLI,QAAS,kBAAMrB,EAAMsB,UAAUL,KAC/BA,EAAOM,oBCyCJC,EApDS,SAAAxB,GACtB,IAAMyB,EAAK,YAAOC,MAAM1B,EAAM2B,YAAYC,QACtCC,EAAOC,KAAKC,IAAI,EAAG/B,EAAMgC,YAAc,GACvCC,EAAKH,KAAKI,IAAIlC,EAAM2B,WAAY3B,EAAMgC,YAAc,GAIxD,OAHa,IAATH,IAAYI,EAAKH,KAAKI,IAAIlC,EAAM2B,WAAY,IAC5CM,IAAOjC,EAAM2B,aAAYE,EAAOC,KAAKC,IAAI,EAAG/B,EAAM2B,WAAa,IAE9C,IAAjBF,EAAMU,OACD,4HAIL,yBAAKC,aAAW,OACd,wBAAIlC,UAAU,cACZ,wBAAIA,UAAW,aAAqC,IAAtBF,EAAMgC,YAAmB,YAAa,KAClE,uBACEX,QAASrB,EAAMqC,2BACfnC,UAAU,YACVoC,KAAK,KAHP,mCAOAb,EAAMT,KAAI,SAAAuB,GACR,OACE,wBAAInB,IAAKmB,EAAMrC,UAAW,aAAeF,EAAMgC,cAAgBO,EAAM,UAAW,KAC9E,uBACElB,QAAS,SAACmB,GAAD,OAAWxC,EAAMyC,mBAAmBD,EAAOD,IACpDrC,UAAW,YACXoC,KAAI,gBAAWC,EAAO,IACtBA,EAAO,OAGZG,MAAMb,EAAMI,GASjB,wBAAI/B,UAAW,aAAeF,EAAMgC,cAAgBhC,EAAM2B,WAAa,EAAG,YAAa,KACrF,uBACEN,QAASrB,EAAM2C,uBACfzC,UAAU,YACVoC,KAAK,KAHP,4C,kBC1CNM,EAAQ,SAAAC,GAEZ,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAIE,KAAKD,EAAI,GAEf,OAAOD,GAGHG,EAAY,WAChB,MAAO,CACLtD,KAAK,KAAD,QAAQ,IAAOmC,KAAKoB,MAAsB,GAAhBpB,KAAKqB,WAAiBT,OAAO,GAAvD,aAA8D,IAAOZ,KAAKsB,KAAqB,GAAhBtB,KAAKqB,WAAiBT,OAAO,GAA5G,aAAmH,IAAOZ,KAAKsB,KAAqB,GAAhBtB,KAAKqB,WAAiBT,OAAO,IACrK9C,KAAMyD,IAAMC,SAAS,CAAEC,MAAO,EAAGC,QAAS,EAAGC,WAAY,EAAGC,OAAQ,UACpE7D,SAAUiC,KAAKoB,MAAsB,IAAhBpB,KAAKqB,UAC1BrD,SAAUgC,KAAKoB,MAAsB,IAAhBpB,KAAKqB,YAIvB,SAASQ,IAAsB,IAAbd,EAAY,uDAAN,IAC7B,OAAOD,EAAMC,GAAK7B,KAAI,SAAA4C,GACpB,OAAO,2BAAIX,KAAX,IAAwBW,U,ICyBPC,E,4MAEnBC,MAAQ,CACNC,YAAY,EACZtC,MAAO,CACLuC,iBAAkB,GAClBhC,YAAa,EACbiC,KAAM,IAERC,aAAc,CACZjD,OAAQ,GACRkD,UAAW,GACXC,MAAO,IAETrD,YAAa,CAAC,OAAQ,OAAQ,WAAY,YAC1CsD,cAAe,I,EAoBjB/C,UAAY,SAACL,GACX,GAAe,OAAXA,GAA8B,SAAXA,EAAvB,CACA,IAAMqD,EAAW,YAAI,EAAKR,MAAMO,eAAeE,MAAK,SAACC,EAAGC,GACtD,MAAe,SAAXxD,EACCuD,EAAE5E,KAAK,GAAK6E,EAAE7E,KAAK,IAAY,EAC/B4E,EAAE5E,KAAK,GAAK6E,EAAE7E,KAAK,GAAW,EAC1B,EAEF4E,EAAEvD,GAAUwD,EAAExD,MAEvB,EAAKyD,SAAS,CACZL,cAAeC,EACf7C,MAAM,2BACD,EAAKqC,MAAMrC,OADX,IACkBO,YAAa,Q,EAKxC3B,eAAiB,SAACY,GAChB,EAAKyD,SAAS,CACZX,YAAY,EACZG,aAAa,2BACR,EAAKJ,MAAMI,cADJ,IACkBjD,c,EAKlCT,kBAAoB,SAAC2D,GACnB,EAAKO,SAAS,CACZX,YAAY,EACZG,aAAa,2BACR,EAAKJ,MAAMI,cADJ,IACkBC,iB,EAKlC1D,cAAgB,SAAC2D,GACf,EAAKM,SAAS,CACZX,YAAY,EACZG,aAAa,2BACR,EAAKJ,MAAMI,cADJ,IACkBE,UAE9B3C,MAAM,2BACD,EAAKqC,MAAMrC,OADX,IACkBO,YAAa,O,EAMxC2C,mBAAqB,WAEnB,EAAKD,SAAS,CACZX,YAAY,K,EAIhBtB,mBAAqB,SAACD,EAAOR,GAC3BQ,EAAMoC,iBACN,EAAKF,SAAS,CACZjD,MAAM,2BACD,EAAKqC,MAAMrC,OADX,IACkBO,mB,EAK3BK,2BAA6B,SAACG,GAC5BA,EAAMoC,iBACN,EAAKF,SAAS,CACZjD,MAAM,2BACD,EAAKqC,MAAMrC,OADX,IACkBO,YAAa,EAAK8B,MAAMrC,MAAMO,YAAc,O,EAKvEW,uBAAyB,SAACH,GACxBA,EAAMoC,iBACN,EAAKF,SAAS,CACZjD,MAAM,2BACD,EAAKqC,MAAMrC,OADX,IACkBO,YAAa,EAAK8B,MAAMrC,MAAMO,YAAc,O,sLA1FrE,IAFMqC,EAAgBV,EAAS,KACzBK,EAAmB,GAChBjB,EAAE,EAAGA,GAAKsB,EAAclC,OAAQY,GAAK8B,KAAKf,MAAMrC,MAAMwC,KAC7DD,EAAiBhB,KAAKqB,EAAc3B,MAAMK,EAAGA,EAAI8B,KAAKf,MAAMrC,MAAMwC,OAGpEY,KAAKH,SAAS,CACZL,gBACA5C,MAAM,2BACDoD,KAAKf,MAAMrC,OADX,IACkBuC,uB,qIAyFhB,MAG4Ba,KAAKf,MAAMI,aAAvCjD,EAHA,EAGAA,OAAQkD,EAHR,EAGQA,UAAWC,EAHnB,EAGmBA,MAHnB,EAIqBS,KAAKf,MAAMrC,MAAhCO,EAJA,EAIAA,YAAaiC,EAJb,EAIaA,KAChBI,EAAgBQ,KAAKf,MAAMO,cAI7B,OAHEQ,KAAKf,MAAMC,aACbM,EArKR,SAAqBA,EAAepD,EAAQkD,EAAWC,GAoCrD,OAnCsBC,EAAcS,QAAO,SAAAC,GACzC,IAAIC,GAAS,EAETC,EAAQ,IAAIC,OAAJ,UAAcd,GAAS,KAEnC,GAAInD,GAAUkD,GAAaC,EACzB,GAAe,SAAXnD,EACgB,WAAdkD,IACFa,EAASZ,EAAMe,gBAAkBJ,EAAI9D,GAAQkE,eAE7B,aAAdhB,IACFa,EAASC,EAAMG,KAAKL,EAAI9D,SAErB,CACL,IAAIoE,EAASC,OAAOlB,IACTmB,MAAMF,KAEG,WAAdlB,IACFa,EAASK,IAAWN,EAAI9D,IAER,aAAdkD,IACFa,EAASC,EAAMG,KAAN,UAAcL,EAAI9D,MAEX,SAAdkD,IACFa,EAASD,EAAI9D,GAAUoE,GAEP,SAAdlB,IACFa,EAASD,EAAI9D,GAAUoE,IAK/B,OAAOL,KAoIaQ,CAAYnB,EAAepD,EAAQkD,EAAWC,IAG1D,kBAAC,IAAMnE,SAAP,KAEE,kBAAC,EAAD,CACEI,eAAgBwE,KAAKxE,eACrBG,kBAAmBqE,KAAKrE,kBACxBC,cAAeoE,KAAKpE,cACpBgF,YAAaZ,KAAKF,mBAClB/D,gBAAiBK,GAAUkD,KAG7B,kBAAC,EAAD,CACEnC,YAAaA,EACbL,WAAYG,KAAKsB,KAAKiB,EAAclC,OAAS8B,GAC7CxB,mBAAoBoC,KAAKpC,mBACzBJ,2BAA4BwC,KAAKxC,2BACjCM,uBAAwBkC,KAAKlC,yBAG/B,2BAAOzC,UAAU,uBACf,+BACE,kBAAC,EAAD,CACEa,YAAa8D,KAAKf,MAAM/C,YACxBO,UAAWuD,KAAKvD,YAGd+C,EAAc3B,MAAMV,EAAciC,EAAMjC,EAAciC,EAAOA,GAAMjD,KAAI,SAAC0E,GACtE,OAAO,kBAAC,EAAD,eAAUtE,IAAKsE,EAAS9B,IAAQ8B,SAMjD,kBAAC,EAAD,CACE1D,YAAaA,EACbL,WAAYG,KAAKsB,KAAKiB,EAAclC,OAAS8B,GAC7CxB,mBAAoBoC,KAAKpC,mBACzBJ,2BAA4BwC,KAAKxC,2BACjCM,uBAAwBkC,KAAKlC,8B,GAtKVgD,aC5CdC,E,4MAEnB9B,MAAQ,CACN+B,UAAU,G,kEAIVhB,KAAKH,SAAS,CACZmB,UAAU,M,+BAMZ,OAAIhB,KAAKf,MAAM+B,SACN,iIAGFhB,KAAK7E,MAAM8F,a,GAlBoBH,aCY3BI,MAVf,WACE,OACE,yBAAK7F,UAAU,gBACb,kBAAC,EAAD,KACE,kBAAC,EAAD,SCIY8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD4HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6c28557e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TableRow = ({date, name, quantity, distance}) => {\r\n    return (\r\n            <tr>\r\n              <td>{date}</td>\r\n              <td>{name}</td>\r\n              <td>{quantity}</td>\r\n              <td>{distance}</td>\r\n            </tr>\r\n    )\r\n}\r\n\r\nexport default TableRow;","import React from 'react'\r\n\r\nconst TableSort = (props) => {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"input-group mb-3 mt-3\">\r\n          <select onChange={(e) => props.onColumnChange(e.target.value)}  className=\"custom-select\">\r\n            <option value=''>Выберите колонку...</option>\r\n            <option value=\"name\">Name</option>\r\n            <option value=\"quantity\">Quantity</option>\r\n            <option value=\"distance\">Distance</option>\r\n          </select>\r\n          <select onChange={(e) => props.onConditionChange(e.target.value)} className=\"custom-select\">\r\n            <option value=''>Выберите условие...</option>\r\n            <option value=\"equals\">равно</option>\r\n            <option value=\"contains\">содержит</option>\r\n            <option value=\"more\">больше</option>\r\n            <option value=\"less\">меньше</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n       \r\n          <input \r\n            onChange={(e) => props.onInputChange(e.target.value)}\r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            placeholder={props.inputDisabled? 'Для фильтра выберите колонку и условие' : 'Введите значение для фильтра...'}\r\n            disabled={props.inputDisabled}\r\n          ></input>\r\n        </div>\r\n        <p>Выберите все поля для фильтрации и укажите значение</p>\r\n        \r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TableSort;","import React from 'react'\r\n\r\nconst TableHeader = props => {\r\n    return (\r\n      <tr>\r\n      {\r\n        props.tableHeader.map(column => {\r\n        return (\r\n          <th \r\n            style={{'cursor': 'pointer'}}\r\n            scope=\"col\" \r\n            key={column}\r\n            onClick={() => props.sortTable(column)}\r\n          >{column.toUpperCase()}\r\n          </th>\r\n          )\r\n        })\r\n      }\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default TableHeader;","import React from 'react'\r\n\r\nconst TablePagination = props => {\r\n  const pages = [...Array(props.pagesTotal).keys()]\r\n  let from = Math.max(0, props.currentPage - 3)\r\n  let to = Math.min(props.pagesTotal, props.currentPage + 4)\r\n  if (from === 0) to = Math.min(props.pagesTotal, 7);\r\n  if (to === props.pagesTotal) from = Math.max(0, props.pagesTotal - 7)\r\n\r\n  if (pages.length === 0) {\r\n    return <h2>Ничего не найдено</h2>\r\n  }\r\n  \r\n    return (\r\n      <nav aria-label=\"...\">\r\n        <ul className=\"pagination\">\r\n          <li className={\"page-item\" + (props.currentPage === 0? ' disabled': '')}>\r\n            <a \r\n              onClick={props.onPreviousPageClickHandler}\r\n              className=\"page-link\" \r\n              href=\"/\">Назад</a>\r\n          </li>\r\n\r\n          {\r\n            pages.map(page => {\r\n              return (\r\n                <li key={page} className={\"page-item\" + (props.currentPage === page? ' active': '')}>\r\n                  <a \r\n                    onClick={(event) => props.onPageClickHandler(event, page)} \r\n                    className={\"page-link\"} \r\n                    href={`/page/${page + 1}`}\r\n                  >{page + 1}</a>\r\n                </li>\r\n              )\r\n            }).slice(from, to)\r\n          }\r\n\r\n          {/* <li className=\"page-item\"><a className=\"page-link\" href=\"/1\">1</a></li>\r\n          <li className=\"page-item active\" aria-current=\"page\">\r\n            <a className=\"page-link\" href=\"/2\">2 <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"page-item\"><a className=\"page-link\" href=\"/3\">3</a></li> */}\r\n\r\n          <li className={\"page-item\" + (props.currentPage === props.pagesTotal - 1? ' disabled': '')} >\r\n            <a \r\n              onClick={props.onNextPageClickHandler}\r\n              className=\"page-link\" \r\n              href=\"/\">Вперед</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default TablePagination;","import namor from \"namor\";\r\n\r\nconst range = len => {\r\n  const arr = [];\r\n  for (let i = 0; i < len; i++) {\r\n    arr.push(i + 1);\r\n  }\r\n  return arr;\r\n};\r\n\r\nconst newPerson = () => {\r\n  return {\r\n    date: `20${('0' + (Math.floor(Math.random() * 20))).slice(-2)}-${('0' + (Math.ceil(Math.random() * 12))).slice(-2)}-${('0' + (Math.ceil(Math.random() * 28))).slice(-2)}`,\r\n    name: namor.generate({ words: 1, numbers: 0, saltLength: 0, subset: \"manly\"}),\r\n    quantity: Math.floor(Math.random() * 1000),\r\n    distance: Math.floor(Math.random() * 100),\r\n  };\r\n};\r\n\r\nexport function makeData(len = 2000) {\r\n  return range(len).map(id => {\r\n    return {...newPerson(), id}   \r\n  });\r\n}\r\n","import React, { Component } from 'react'\r\nimport TableRow from './TableRow'\r\nimport TableSort from './TableSort';\r\nimport TableHeader from './TableHeader';\r\nimport TablePagination from './TablePagination';\r\nimport { makeData } from '../makeRandomData';\r\n\r\nfunction filterTable(tableContents, column, condition, input) {\r\n  const filteredTable = tableContents.filter(row => {\r\n    let keepIt = true;\r\n    let isValid = false;\r\n    let regEx = new RegExp(`${input}`, 'i')\r\n    \r\n    if (column && condition && input) {\r\n      if (column === 'name') {\r\n        if (condition === 'equals') {\r\n          keepIt = input.toLowerCase() === row[column].toLowerCase()\r\n        }\r\n        if (condition === 'contains') {\r\n          keepIt = regEx.test(row[column])\r\n        }\r\n      } else {\r\n        let number = Number(input)\r\n        isValid = !isNaN(number);\r\n        if (isValid) {\r\n          if (condition === 'equals') {\r\n            keepIt = number === row[column]\r\n          }\r\n          if (condition === 'contains') {\r\n            keepIt = regEx.test(`${row[column]}`)\r\n          }\r\n          if (condition === 'more') {\r\n            keepIt = row[column] > number\r\n          }\r\n          if (condition === 'less') {\r\n            keepIt = row[column] < number\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return keepIt\r\n  })\r\n\r\n  return filteredTable;\r\n}\r\n\r\nexport default class Table extends Component {\r\n\r\n  state = {\r\n    isFiltered: false,\r\n    pages: {\r\n      devidedIntoPages: [],\r\n      currentPage: 0,\r\n      step: 10\r\n    },\r\n    filterValues: {\r\n      column: '',\r\n      condition: '',\r\n      input: '',\r\n    },\r\n    tableHeader: ['date', 'name', 'quantity', 'distance'],\r\n    tableContents: []\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // асинхронно делаем запрос в базу данных\r\n    // и устанавливаем наш state\r\n    const tableContents = makeData(103)\r\n    const devidedIntoPages = []\r\n    for (let i=0; i <= tableContents.length; i += this.state.pages.step) {\r\n      devidedIntoPages.push(tableContents.slice(i, i + this.state.pages.step))\r\n    }\r\n\r\n    this.setState({\r\n      tableContents,\r\n      pages: {\r\n        ...this.state.pages, devidedIntoPages\r\n      }\r\n    })\r\n  }\r\n\r\n  sortTable = (column) => {\r\n    if (column === 'id' || column === 'date') return;\r\n    const contents = [...this.state.tableContents].sort((a, b) => {\r\n      if (column === 'name') {\r\n        if(a.name[0] < b.name[0]) return -1;\r\n        if(a.name[0] > b.name[0]) return 1;\r\n        return 0;\r\n      }\r\n      return a[column] - b[column];\r\n    })\r\n    this.setState({\r\n      tableContents: contents,\r\n      pages: {\r\n        ...this.state.pages, currentPage: 0\r\n      },\r\n    })\r\n  }\r\n\r\n  onColumnChange = (column) => {\r\n    this.setState({\r\n      isFiltered: true,\r\n      filterValues: {\r\n        ...this.state.filterValues, column\r\n      }\r\n    })\r\n  }\r\n\r\n  onConditionChange = (condition) => {\r\n    this.setState({\r\n      isFiltered: true,\r\n      filterValues: {\r\n        ...this.state.filterValues, condition\r\n      }\r\n    })\r\n  }\r\n\r\n  onInputChange = (input) => {\r\n    this.setState({\r\n      isFiltered: true,\r\n      filterValues: {\r\n        ...this.state.filterValues, input\r\n      },\r\n      pages: {\r\n        ...this.state.pages, currentPage: 0\r\n      },\r\n    })\r\n    \r\n  }\r\n\r\n  tableFilterHandler = () => {\r\n    \r\n    this.setState({\r\n      isFiltered: true\r\n    })\r\n  }\r\n\r\n  onPageClickHandler = (event, currentPage) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      pages: {\r\n        ...this.state.pages, currentPage\r\n      }\r\n    })\r\n  }\r\n  \r\n  onPreviousPageClickHandler = (event) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      pages: {\r\n        ...this.state.pages, currentPage: this.state.pages.currentPage - 1\r\n      }\r\n    })\r\n  }\r\n\r\n  onNextPageClickHandler = (event) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      pages: {\r\n        ...this.state.pages, currentPage: this.state.pages.currentPage + 1\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n    render() {\r\n      // console.log(this.state);\r\n      \r\n      const {column, condition, input} = this.state.filterValues\r\n      const {currentPage, step} = this.state.pages\r\n      let tableContents = this.state.tableContents\r\n      if (this.state.isFiltered) {\r\n        tableContents = filterTable(tableContents, column, condition, input)\r\n      }\r\n        return (\r\n            <React.Fragment>\r\n\r\n              <TableSort\r\n                onColumnChange={this.onColumnChange}\r\n                onConditionChange={this.onConditionChange}\r\n                onInputChange={this.onInputChange}\r\n                tableFilter={this.tableFilterHandler}\r\n                inputDisabled={!(column && condition)}\r\n              />\r\n\r\n              <TablePagination\r\n                currentPage={currentPage}\r\n                pagesTotal={Math.ceil(tableContents.length / step)}\r\n                onPageClickHandler={this.onPageClickHandler}\r\n                onPreviousPageClickHandler={this.onPreviousPageClickHandler}\r\n                onNextPageClickHandler={this.onNextPageClickHandler}\r\n              />\r\n              \r\n              <table className='table table-striped'>\r\n                <tbody>\r\n                  <TableHeader\r\n                    tableHeader={this.state.tableHeader}\r\n                    sortTable={this.sortTable}\r\n                  />\r\n                    {\r\n                      tableContents.slice(currentPage * step, currentPage * step + step).map((rowProps) => {\r\n                        return <TableRow key={rowProps.id} {...rowProps}/>\r\n                      })\r\n                    }\r\n                </tbody>\r\n              </table>\r\n\r\n              <TablePagination\r\n                currentPage={currentPage}\r\n                pagesTotal={Math.ceil(tableContents.length / step)}\r\n                onPageClickHandler={this.onPageClickHandler}\r\n                onPreviousPageClickHandler={this.onPreviousPageClickHandler}\r\n                onNextPageClickHandler={this.onNextPageClickHandler}\r\n              />\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <h1>Что-то пошло не так...</h1>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Table from './components/Table';\r\nimport ErrorBoundry from './components/ErrorBoundary';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App col-lg-6\">\r\n      <ErrorBoundry>\r\n        <Table/>\r\n      </ErrorBoundry>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}